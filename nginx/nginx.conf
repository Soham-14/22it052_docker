server {
    listen 80;
    server_name {domain};  #Change with your domain or subdomain ex: shop.example.com

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    #Security nginx configuration
    server_tokens off;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;
    # HSTS protection
    add_header Strict-Transport-Security max-age=31536000;
    # XSS protection in old browsers
    add_header X-XSS-Protection "1; mode=block";
    # Block leakage of information
    proxy_hide_header X-Powered-By;
    # Click-Jacking protection
    add_header X-Frame-Options "SAMEORIGIN";
    # Prevents unexpected cross-origin information leakage
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    # MIME-sniffing protection in old browsers
    add_header X-Content-Type-Options nosniff;

    location /api {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_intercept_errors on;
        proxy_pass http://proshop-backend-app:5000; #Backend service name and port in docker-compose.yml

    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_intercept_errors on;
        proxy_pass http://proshop-frontend-app:80;  #Frontend service name and port in docker-compose.yml
    }

    access_log off;
    error_log  /var/log/nginx/error.log error;
}

#HTTPS Access Start
server {
    listen 443 ssl;
    server_name {domain};  #Change with your domain or subdomain ex: shop.example.com

    ssl_certificate /etc/letsencrypt/live/{domain}/fullchain.pem; #Replace with your domain name
    ssl_certificate_key /etc/letsencrypt/live/{domain}/privkey.pem; #Replace with your domain name

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
    }

    #Security nginx configuration
    server_tokens off;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;
    # HSTS protection
    add_header Strict-Transport-Security max-age=31536000;
    # XSS protection in old browsers
    add_header X-XSS-Protection "1; mode=block";
    # Block leakage of information
    proxy_hide_header X-Powered-By;
    # Click-Jacking protection
    add_header X-Frame-Options "SAMEORIGIN";
    # Prevents unexpected cross-origin information leakage
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    # MIME-sniffing protection in old browsers
    add_header X-Content-Type-Options nosniff;

    location /api {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_intercept_errors on;
        proxy_pass http://proshop-backend-app:5000; #Backend service name and port in docker-compose.yml

    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_intercept_errors on;
        proxy_pass http://proshop-frontend-app:80;  #Frontend service name and port in docker-compose.yml
    }
}
#HTTPS Access End